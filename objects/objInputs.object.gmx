<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Left = false
    global.Leftpress = false
global.Right = false
    global.Rightpress = false
global.Up = false
    global.Uppress = false
global.Down = false
    global.Downpress = false
global.Z = false
    global.Zpress = false
global.X = false
    global.Xpress = false
global.C = false
    global.Cpress = false
global.Enter = false
    global.Enterpress = false
global.Back = false
    global.Backpress = false

global.mouseread = 0
global.mmove = false
global.mmx = mouse_x
global.mmy = mouse_y

global.DEBUG = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse

if global.mouseread &gt; 0
global.mouseread --

if global.mouseread = 0
{
global.mmx = mouse_x
global.mmy = mouse_y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inputs

global.Left = keyboard_check(vk_left) or keyboard_check(ord('A'))
if global.Left
{
if global.Leftpress = 0
global.Leftpress = 1
else
global.Leftpress = -1
}
else
global.Leftpress = 0

global.Right = keyboard_check(vk_right) or keyboard_check(ord('D'))
if global.Right
{
if global.Rightpress = 0
global.Rightpress = 1
else
global.Rightpress = -1
}
else
global.Rightpress = 0

global.Up = keyboard_check(vk_up) or keyboard_check(ord('W'))
if global.Up
{
if global.Uppress = 0
global.Uppress = 1
else
global.Uppress = -1
}
else
global.Uppress = 0

global.Down = keyboard_check(vk_down) or keyboard_check(ord('S'))
if global.Down
{
if global.Downpress = 0
global.Downpress = 1
else
global.Downpress = -1
}
else
global.Downpress = 0

global.Z = keyboard_check(vk_space) or keyboard_check(ord('Z'))
if global.Z
{
if global.Zpress = 0
global.Zpress = 1
else
global.Zpress = -1
}
else
global.Zpress = 0

global.X = keyboard_check(ord('X')) or keyboard_check(ord('K')) or keyboard_check(vk_numpad5)
if global.X
{
if global.Xpress = 0
global.Xpress = 1
else
global.Xpress = -1
}
else
global.Xpress = 0

global.C = keyboard_check(vk_shift) or keyboard_check(ord('C'))
if global.C
{
if global.Cpress = 0
global.Cpress = 1
else
global.Cpress = -1
}
else
global.Cpress = 0

global.Enter = keyboard_check(vk_enter) or keyboard_check(vk_escape) or keyboard_check(vk_return)
if global.Enter
{
if global.Enterpress = 0
global.Enterpress = 1
else
global.Enterpress = -1
}
else
global.Enterpress = 0

global.Back = keyboard_check(vk_backspace) or keyboard_check(vk_delete)
if global.Back
{
if global.Backpress = 0
global.Backpress = 1
else
global.Backpress = -1
}
else
global.Backpress = 0


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse

global.mmove = point_distance(mouse_x,mouse_y,global.mmx,global.mmy) &gt; 2

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debugging

if global.DEBUG
{
if keyboard_check(vk_control)
{
if keyboard_check_pressed(ord('R'))
{
if keyboard_check(ord('L'))
game_restart()
else
room_restart()
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
